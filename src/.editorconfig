root = true

# Global defaults -----------------------------------------------------------
[*]
charset = utf-8
end_of_line = crlf
insert_final_newline = true
indent_style = space
indent_size = 4
trim_trailing_whitespace = true

# Solution-wide analyzer baseline (start strict; can tune per group) --------
[*.{cs,vb}]
dotnet_analyzer_diagnostic.severity = warning

# Language version (C# 12 / latest) -----------------------------------------
[*.cs]
dotnet_language_version = latest

# Formatting / style (approximate common ReSharper defaults) ----------------
csharp_prefer_braces = true:warning
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:suggestion
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion
csharp_style_prefer_collection_expression = true:suggestion

# Qualification -------------------------------------------------------------
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Using directives ----------------------------------------------------------
dotnet_sort_system_directives_first = true
csharp_using_directive_placement = inside_namespace:warning

# Parentheses / simplification ---------------------------------------------
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = for_clarity:silent
dotnet_style_parentheses_in_other_operators = for_clarity:silent
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

# Nullability / conditionals -----------------------------------------------
csharp_style_conditional_delegate_call = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion

# Fields / modifiers --------------------------------------------------------
dotnet_style_readonly_field = true:warning
csharp_prefer_static_local_function = true:suggestion

# Remove unused -------------------------------------------------------------
dotnet_diagnostic.IDE0005.severity = warning   # Unused using

# General IDE analyzer severities (picked for quality) ----------------------
dotnet_diagnostic.IDE0044.severity = warning   # Add readonly

dotnet_diagnostic.IDE0051.severity = suggestion # Unused private member

# Design / reliability (selected) ------------------------------------------
dotnet_diagnostic.CA1031.severity = warning    # Do not catch general exception types
dotnet_diagnostic.CA1062.severity = warning    # Validate arguments of public methods
dotnet_diagnostic.CA1305.severity = suggestion # Specify IFormatProvider

# Performance (enable as you add Microsoft.CodeAnalysis.NetAnalyzers) -------
# dotnet_diagnostic.CA1822.severity = suggestion  # Mark members static
# dotnet_diagnostic.CA1825.severity = suggestion  # Avoid zero-length array allocations

# Logging (custom / 3rd party if present) -----------------------------------
dotnet_diagnostic.Serilog001.severity = warning

# Naming rules --------------------------------------------------------------
# Private fields with underscore
DotNetNamingSymbols.private_fields.applicable_kinds = field
DotNetNamingSymbols.private_fields.applicable_accessibilities = private
DotNetNamingStyle.underscore_prefix.capitalization = camel_case
DotNetNamingStyle.underscore_prefix.required_prefix = _
DotNetNamingRule.private_fields_with_underscore.symbols = private_fields
DotNetNamingRule.private_fields_with_underscore.style = underscore_prefix
DotNetNamingRule.private_fields_with_underscore.severity = suggestion

# Constants PascalCase
DotNetNamingSymbols.constants.applicable_kinds = field
DotNetNamingSymbols.constants.required_modifiers = const
DotNetNamingStyle.pascal_case.capitalization = pascal_case
DotNetNamingRule.constants_pascal.symbols = constants
DotNetNamingRule.constants_pascal.style = pascal_case
DotNetNamingRule.constants_pascal.severity = warning

# Interfaces start with I
DotNetNamingSymbols.interfaces.applicable_kinds = interface
DotNetNamingStyle.interface_prefix.capitalization = pascal_case
DotNetNamingStyle.interface_prefix.required_prefix = I
DotNetNamingRule.interfaces_start_with_I.symbols = interfaces
DotNetNamingRule.interfaces_start_with_I.style = interface_prefix
DotNetNamingRule.interfaces_start_with_I.severity = warning

# Async suffix (advisory)
DotNetNamingSymbols.async_methods.applicable_kinds = method
DotNetNamingStyle.async_suffix.capitalization = pascal_case
DotNetNamingStyle.async_suffix.required_suffix = Async
DotNetNamingRule.async_methods_end_with_async.symbols = async_methods
DotNetNamingRule.async_methods_end_with_async.style = async_suffix
DotNetNamingRule.async_methods_end_with_async.severity = suggestion

# File headers --------------------------------------------------------------
file_header_template = Licensed under the MIT License.

# Generated code suppression (designer / g) --------------------------------
[*.{g.cs,generated.cs,designer.cs}]
dotnet_analyzer_diagnostic.severity = silent
