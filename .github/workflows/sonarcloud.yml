name: SonarCloud Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
        working-directory: .
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis relevancy

      - name: Setup .NET 8.x SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\NuGet\v3-cache
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Install coverage tool
        run: dotnet tool install --global dotnet-coverage

      - name: .NET info
        run: dotnet --info

      - name: Restore dependencies
        run: dotnet restore src/idasen-desk-core.sln

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin `
            /k:"tschroedter_idasen-desk-core" `
            /o:"tschroedter" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          
          dotnet build src/idasen-desk-core.sln --configuration Release --no-restore
          
          dotnet-coverage collect "dotnet test src/idasen-desk-core.sln --configuration Release --no-build --verbosity normal" -f xml -o coverage.xml
          
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
