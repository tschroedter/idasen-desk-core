name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: read

jobs:
  build-test:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        shell: pwsh
        run: |
          Write-Host "Restoring all projects..."
          Get-ChildItem -Recurse -Filter *.csproj | ForEach-Object { 
            Write-Host "Restoring $($_.FullName)"; 
            dotnet restore $_.FullName 
          }

      - name: Build (Release)
        shell: pwsh
        run: |
          Write-Host "Building all non-test projects in Release..."
          Get-ChildItem -Recurse -Filter *.csproj | Where-Object { $_.FullName -notmatch '\\Tests\\' } | ForEach-Object {
            Write-Host "Building $($_.FullName)";
            dotnet build $_.FullName --configuration Release --no-restore
          }

      - name: Run Tests
        shell: pwsh
        run: |
          $failed = $false
          $testProjects = Get-ChildItem -Recurse -Filter *.Tests.csproj
          if (-not $testProjects) {
            Write-Host "No test projects found."; exit 0
          }
          foreach ($proj in $testProjects) {
            Write-Host "Testing $($proj.FullName)";
            dotnet test $proj.FullName --configuration Release --no-build --collect:"XPlat Code Coverage" --verbosity minimal || { $failed = $true }
          }
          if ($failed) { Write-Error "One or more tests failed."; exit 1 }
